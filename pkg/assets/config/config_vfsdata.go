// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2019, 9, 18, 15, 57, 36, 11598916, time.UTC),
		},
		"/orchestrations": &vfsgen۰DirInfo{
			name:    "orchestrations",
			modTime: time.Date(2019, 9, 15, 14, 51, 26, 214461617, time.UTC),
		},
		"/orchestrations/appsody-operator": &vfsgen۰DirInfo{
			name:    "appsody-operator",
			modTime: time.Date(2019, 9, 15, 14, 51, 26, 212871338, time.UTC),
		},
		"/orchestrations/appsody-operator/0.1": &vfsgen۰DirInfo{
			name:    "0.1",
			modTime: time.Date(2019, 9, 15, 14, 51, 26, 213001244, time.UTC),
		},
		"/orchestrations/appsody-operator/0.1/appsody.yaml": &vfsgen۰CompressedFileInfo{
			name:             "appsody.yaml",
			modTime:          time.Date(2019, 9, 15, 14, 51, 26, 213289292, time.UTC),
			uncompressedSize: 7504,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x8f\xdb\xb8\x11\x7f\xf7\xa7\x18\xa4\x0f\xdb\x16\xb5\x16\x69\x70\x87\xc2\xc0\xa1\x75\x9d\x5c\x9b\xde\x25\x6b\xd8\x9b\x2b\x8a\xa2\x38\x8c\xa9\xb1\xcd\x2e\x45\xaa\xe4\xd0\x17\x27\xc8\x77\x2f\x48\x4a\x96\x65\x49\xfe\x93\x4b\xf8\x64\x93\x9c\x99\x1f\xe7\x1f\x87\x23\x2c\xe5\x4f\x64\x9d\x34\x7a\x02\x58\x4a\x7a\xcf\xa4\xc3\x3f\x97\x3d\xfd\xc9\x65\xd2\xdc\xef\x9e\xaf\x88\xf1\xf9\xe8\x49\xea\x7c\x02\x33\xef\xd8\x14\x0b\x72\xc6\x5b\x41\x2f\x69\x2d\xb5\x64\x69\xf4\xa8\x20\xc6\x1c\x19\x27\x23\x00\x8d\x05\x05\x6e\xa5\x33\xf9\x1e\xcb\x52\x49\x81\x1c\x79\x56\x73\x59\x4e\xbb\x91\x2b\x49\x84\xdd\x98\xe7\x91\x05\xaa\xb9\x95\x9a\xc9\xce\x8c\xf2\x85\x76\x61\x6d\x0c\xff\x58\x3e\xbc\x9d\x23\x6f\x27\x90\x05\x82\xec\x88\xdd\xeb\x02\x37\x34\x02\x00\xc8\xc9\x09\x2b\x4b\x8e\xa7\x98\xae\x9c\x51\x9e\x29\xc2\x00\xb3\x06\xde\x12\xe4\x54\x2a\xb3\xa7\x1c\x64\x20\x02\x61\x34\xa3\xd4\x52\x6f\xc0\xd2\x46\x3a\xb6\x7b\x40\x9d\x03\xe3\x26\x32\x4c\x27\x68\x04\xf0\xbe\xa4\x09\x38\xb6\x52\x6f\x7a\x61\xd1\xfb\xd2\xb8\x1e\x30\xcb\x92\x84\x5c\x4b\x72\xf0\xcb\x96\x78\x4b\xb6\x42\x52\x90\x66\x90\x0e\x12\x5d\x0e\x41\xef\x56\xa3\x52\x7b\xd8\x49\x84\x9c\xd6\xe8\x15\xc3\xc2\x78\xa6\x23\x44\xaf\xd2\xf6\x23\x4c\x2b\x63\x14\xa1\xee\x80\x62\x64\xef\x32\x61\x74\x52\xae\xfb\xf7\x9f\x7f\xfb\x97\x2c\x90\x7c\xf7\xdd\xdd\x82\x84\xd1\x42\x2a\xca\xef\x7e\xf7\x9f\x6a\x6b\x0f\xf4\x38\x5f\x2b\xd0\xd6\x34\x70\xe0\x79\x84\xab\xe1\x78\x59\x5d\xd7\x23\xb3\x84\xae\x12\xd3\x42\xb6\x88\xf3\xb0\x36\x36\x42\x5b\xa3\x54\xde\x46\x53\x5f\x42\x79\xe0\x57\x5a\x69\xac\xe4\xfd\x04\x9e\x7f\x49\xc4\x05\x39\xd7\xeb\x94\xdf\x57\x18\xab\x0d\xb0\xb6\xa6\xb8\x80\xf6\xcd\x11\xaf\x5b\xe0\xd6\x91\x98\x09\x4b\x31\x4e\x1e\x65\x41\x8e\xb1\x28\x7b\x62\x65\x43\x8d\x81\x53\x4c\x1f\x21\x98\xb6\xbc\x3f\xc7\xe8\x8a\x1b\x6b\x7c\x79\x88\xee\x18\xc9\x69\x7f\x0c\x58\x80\x94\x27\xa6\x69\x79\xda\x44\x6b\x5c\x54\xd2\xf1\x0f\x03\x1b\x7e\x94\x8e\xd3\x61\x95\xb7\xa8\x7a\x13\x48\x5c\x77\x52\x6f\xbc\x42\xdb\xb7\x63\x04\xe0\x84\x09\x70\xdf\x06\x48\x25\x8a\xe8\x92\xce\xaf\xea\xf3\x55\x30\x93\x51\x27\xf0\xf1\xd3\x08\x60\x87\x4a\xe6\x91\x3e\x2d\x9a\x92\xf4\x74\xfe\xfa\xa7\x17\x4b\xb1\xa5\x02\xd3\x64\xb0\x82\x29\xc9\xb2\xac\x79\x84\x71\x94\x3f\x0f\x73\x27\x4a\xbe\x0b\xac\xd2\x9e\x10\xd8\x52\x93\x8b\x1a\xdf\xa5\x39\xca\xc1\x45\x31\xc9\x12\xd2\x81\xa5\xd2\x92\x23\xcd\x8d\xe2\xea\x61\xd6\x80\x1a\xcc\xea\xbf\x24\x38\x83\x25\xd9\xc0\x04\xdc\xd6\x78\x95\x07\x2f\xda\x91\xe5\xe8\x57\x1b\x2d\x3f\x1c\x38\x3b\x60\x13\x45\x2a\x64\xaa\xb4\x5c\x8f\x98\x72\x35\xaa\xa0\x04\x4f\x7f\x88\x69\xb0\xc0\x3d\x58\x0a\x32\xc0\xeb\x23\x6e\x71\x8b\xcb\xe0\x8d\xb1\x04\x52\xaf\xcd\x04\xb6\xcc\xa5\x9b\xdc\xdf\x6f\x24\xd7\x37\x86\x30\x45\xe1\xb5\xe4\xfd\x7d\x48\xb3\x56\xae\x3c\x1b\xeb\xee\x73\xda\x91\xba\xc7\x52\x8e\x23\x4e\x9d\x6e\x84\x22\xff\xcd\xc1\x32\x77\x47\xc0\x4e\x3c\x3c\x8d\xe8\x5b\x83\x6a\x0e\x8e\x15\x72\x2a\x56\x64\x09\x6e\xa3\xcd\x30\x15\x94\xb0\x78\xb5\x7c\x3c\xb8\x7b\xd4\x78\x5b\xc5\x51\xb9\x0d\x99\x6b\xf4\x1c\xf4\x22\xf5\x9a\x6c\xb2\x53\x0c\xe2\xc0\x91\x74\x5e\x1a\xa9\x39\xfe\x11\x4a\x92\x6e\xeb\xd8\xf9\x55\x21\x39\x18\xf6\x7f\x9e\x1c\x07\x73\x64\x30\x43\xad\x0d\xc3\x8a\xc0\x97\x21\xb6\xf2\x0c\x5e\x6b\x98\x61\x41\x6a\x86\x8e\xbe\xb4\x96\x83\x42\xdd\x38\x68\xf0\xb2\x9e\x8f\x2f\xf3\xf6\xc6\xa4\x9c\xc3\x74\x7d\x87\xd7\xa3\x2f\x42\x52\x94\xb4\x6f\xed\xf6\xea\x00\x8a\x48\x68\xc5\x56\x32\x09\xf6\xb6\x43\x24\x99\x0a\x77\x3a\x79\x86\x57\xbd\x84\xd6\xe2\xbe\x2d\xc5\xb3\x71\x02\x95\xd4\x9b\x53\x7e\x43\x27\x8a\x6a\xc2\xf7\x0b\x8a\x07\xeb\x59\x84\x70\x3f\x15\xc8\x93\x10\x61\x2f\xfe\xd8\xb3\x5e\x48\x2d\x0b\x5f\xd4\x39\xbd\x0f\x6a\x08\xce\x0d\xd9\xae\x64\xa9\x7f\x8d\xe4\xf3\xcc\x19\xed\x86\x78\x36\x7f\xf7\x8e\xa5\x92\x1f\xa2\xd5\xe6\x64\x45\x48\x48\x5d\xd3\xfd\x5a\x79\xbd\x7e\x15\x46\xbc\xbe\xe8\x07\x8d\x2c\x77\x14\x22\x50\x8a\x01\xbf\x69\x6a\xa0\x66\x90\xde\xdd\xe4\x2f\x3d\x00\x86\xfd\x85\xf4\xee\x7b\x6b\x8a\xaf\x28\x20\xd6\x79\xd7\x9f\x56\xc9\x1d\x69\x72\x6e\x6e\xcd\x6a\x80\xac\x47\x7e\xe9\x95\x9a\x1b\x25\xc5\xfe\xea\x78\x0c\x24\x4b\x12\x96\xf8\x6a\x12\x4b\x98\xcb\xdb\xc1\xd9\x01\xff\x3e\xe7\x6b\xc3\x7e\x56\xa7\xfb\x99\xd1\x8e\x2d\x4a\xcd\x1d\xc6\x83\x48\x5c\xbf\xef\x9d\xcb\x0c\x31\xb5\xa7\x92\xa5\x2f\x5e\x8e\x9f\x3c\xc3\x4c\xe0\x7c\x32\x3b\x8b\x39\x02\x34\xb6\x63\x25\xb8\x26\x2f\xe1\xfb\x94\x97\xbe\xfd\xe6\x9b\x17\xdf\x7e\xd9\xc4\x15\x57\x07\xa9\xce\x24\xed\x61\xbb\x4c\x85\x30\x5e\x73\xa8\xf7\xae\xf6\x49\xc7\x28\x9e\x6e\xd8\x6d\x6c\x4f\xe6\x3b\x7b\x35\x04\x48\xb1\x20\xbf\xed\xb0\xa1\xba\xfd\x70\xab\x86\x00\x76\xe1\xc9\x4c\x33\x85\xb2\x78\xa4\xa2\x0c\x65\xde\x30\x8f\x33\x99\xa8\x67\x29\xb1\x7e\x13\xce\xd3\x39\xe7\x97\x4b\x78\x49\xca\x57\x13\x10\x0a\x2f\x69\xa9\x55\x3c\x8e\x3b\x55\x49\x6b\x31\xba\xc8\xc5\xfa\x27\xbd\x22\xae\xa8\x80\x9a\xd7\xe3\x95\x67\x3c\xe7\x5d\x00\x0a\x1d\x3f\x5a\xd4\x4e\xd6\x2f\xbc\xfe\xfc\x51\xc7\x7a\x28\x30\xc7\x2c\x0b\xfa\x9c\x2c\x13\x84\xbd\x8b\x35\xea\x57\x16\x54\xbd\x8e\x3f\x2b\x15\xa6\x66\xc1\x67\x91\x76\xad\x78\x35\xe9\x50\x3e\xbb\x40\x78\xb3\x03\x9f\x10\xec\xea\x96\x5d\xdd\x9d\x3b\x4c\x55\x6d\xb3\xf4\x80\x6f\x56\x53\xb6\xa4\x7c\x02\x6c\x3d\x55\x2f\xe0\x94\xd5\xd2\xcc\x78\x3c\x1e\x1d\xf7\x02\x77\x75\xc7\x6f\xd9\xca\xb2\xc3\x7d\xbe\x71\x70\x57\x64\x63\x3b\xac\xec\x0a\x45\x86\x9e\xb7\xc6\x56\xd5\x64\xd3\x5b\xac\xdb\x8a\xca\x3b\x26\xbb\x30\x8a\x5a\x12\x3a\x2d\x8c\x09\x68\xaf\xd4\xb0\x6c\xeb\x55\x08\x98\x10\xdb\xf2\x6f\xd6\xf8\xb2\xd2\xc7\xb3\x67\xa3\xa6\x08\xa8\xe6\x4a\x93\xbb\xf8\xa3\xba\x48\xd2\x9f\xfa\x2d\x97\xfe\x95\xe1\x10\x8e\x49\x73\xca\x50\x22\xa4\xd8\x6a\x63\x78\x5d\xa5\x9f\xc2\xe8\xb5\xdc\x14\x58\xd6\xfc\x42\x81\xd4\xe2\x8d\x49\x7d\x2e\x19\x6a\x55\x21\xb8\xfb\xfd\x5d\x17\x6a\x38\x53\x17\x6c\xd3\x36\x4c\x7c\x73\xa4\xc2\x68\x57\x8b\xa9\xab\xa5\x83\x58\x46\xa6\xb5\x57\xd5\xc4\x45\x99\xcd\x03\xa8\x2b\x3a\xda\xcd\x68\x46\x55\x9a\xbc\xde\x49\xf6\x1a\xbe\x85\xd1\x92\x4d\x08\x81\x4c\x18\x4b\xc6\x65\xc2\x14\x5d\x09\x95\x92\xaa\xdd\x27\x8c\x37\xc4\x49\xc9\xf1\x3d\x70\x51\x5f\x6f\xeb\x56\xd4\xb8\xeb\x1d\xe7\xb4\x7a\xbf\x96\x1a\x95\xfc\xd0\x39\x58\x7a\x9d\xf7\xcb\x6d\x3a\x60\x27\x8c\x83\x36\x2e\xab\xc7\x1a\xcf\x94\x99\x92\xb4\xdb\xca\x35\x67\xd2\x8c\x00\x90\xd3\x6b\x9e\x16\x14\xb2\x87\x48\x97\x46\xed\xf7\x27\x72\x22\x87\x6b\x2c\x11\x55\xac\x37\xd9\x53\x7a\x4f\x55\xa8\x6f\x92\x75\x14\x26\x97\xa4\x3d\xe1\x0a\x35\x59\x93\x4e\x74\xc2\xa7\x5e\xec\xb1\xf3\x67\x32\xba\x68\xbb\xf1\xb8\x9b\x68\xfe\x2a\x75\x1e\xfc\xfd\xea\x54\x75\x45\xea\x73\x3e\x66\xe8\x98\x81\x7a\xd3\xe7\x20\x65\xd5\x43\x2d\x51\xd0\x04\xa6\xf3\xf9\xf2\xe1\xe5\xbf\x7e\x7e\x98\xbf\x5a\x4c\x1f\x1f\x16\x3f\xbf\x9d\xbe\x79\xb5\x9c\x4f\x67\xaf\x60\x64\x8d\xa2\x05\xad\x03\x88\x6e\xee\x3c\xc3\xbe\x56\xec\x99\x43\x06\x3d\x01\x8c\xda\x9f\x84\x4a\xd7\xa4\xe9\x97\x87\x70\xb9\x4a\x19\x55\x73\xe8\xf0\x92\x8b\xef\x05\x47\x8a\x04\x1b\x9b\x6e\xcd\x02\x59\x6c\x7f\xc4\x15\xa9\xc3\xfd\x3b\x78\x02\x6e\x55\xb6\xa7\x3d\x2a\xd5\x62\x72\x86\x4d\xbb\x6b\xd5\xf3\x88\xe8\x27\x82\xfa\xa3\x11\xd9\x23\x29\xe3\x73\x72\xd2\x88\x5f\x9c\x26\xf0\xf1\x23\x64\xe9\xe3\xd3\xa7\x4f\x47\xab\xc2\x14\x05\xea\x6e\x61\x7a\x96\xdb\xbc\x79\xb8\xc3\x54\xfd\x82\xfb\xe3\x0e\x66\xa7\xf3\x51\x63\xfc\xe7\xf4\x71\xf6\xf7\xc6\x95\x4e\xea\x8e\xd8\x2c\x8d\x5d\x8d\x6e\x2d\x13\x47\xa7\x88\x59\x4b\x52\x79\x70\xc5\x2b\xf7\x57\x14\xe9\x33\xc5\xe1\x2b\xc5\xc1\xed\x7b\x31\xcf\x1f\x5e\x46\xc4\x83\x60\x87\x51\xdd\x20\xbf\x57\x74\x2b\xf8\xfa\xe4\x4f\xe0\xd9\xa9\xa1\x9e\x8d\xfe\x1f\x00\x00\xff\xff\xce\xec\xc0\x0c\x50\x1d\x00\x00"),
		},
		"/orchestrations/cli-services": &vfsgen۰DirInfo{
			name:    "cli-services",
			modTime: time.Date(2019, 9, 15, 14, 51, 26, 213481415, time.UTC),
		},
		"/orchestrations/cli-services/0.1": &vfsgen۰DirInfo{
			name:    "0.1",
			modTime: time.Date(2019, 9, 15, 14, 51, 26, 213567847, time.UTC),
		},
		"/orchestrations/cli-services/0.1/kabanero-cli.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kabanero-cli.yaml",
			modTime:          time.Date(2019, 9, 15, 14, 51, 26, 213869263, time.UTC),
			uncompressedSize: 1286,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xcd\x8e\xd3\x40\x0c\xc7\xef\x79\x0a\x6b\x2f\x2b\x21\x25\x2b\xc4\x1e\x20\x37\xe0\xc0\x0d\xad\x96\x15\x77\x77\xe2\xa6\xa6\x93\xf1\xc8\xe3\x29\x62\x9f\x1e\xcd\xb4\x85\x6d\x9a\xb2\x95\x38\x25\xe3\x8f\xbf\x7f\xb6\x6c\x8c\xfc\x9d\x34\xb1\x84\x1e\x76\x6f\x9b\x2d\x87\xa1\x87\x6f\xa4\x3b\x76\xd4\x4c\x64\x38\xa0\x61\xdf\x00\x04\x9c\xa8\x87\x2d\xae\x30\x90\x4a\xeb\x3c\x37\x29\x92\x2b\xae\x44\x9e\x9c\x89\x96\x7f\x00\x8c\x71\x16\x07\x10\x45\x2d\x15\x77\x0b\x51\xc5\xc4\x89\xef\xe1\xe9\xf3\x43\x4d\x28\xce\x1e\xee\xef\xdf\xd5\x97\xa1\x8e\x64\x0f\xd5\xf6\xa1\x18\xdb\xb6\x6d\x5e\x52\xaa\x64\xa3\x4e\x22\x85\xb4\xe1\xb5\x75\x2c\x77\x7f\xc0\x1f\x8b\xef\x5a\x6c\x93\x3d\xf0\x69\xcf\xc5\xb2\x90\x04\x60\x3e\xed\xe3\x8d\x74\xe2\x80\x56\x69\x22\xa6\x64\x1b\x95\x3c\x6e\xce\x49\x57\xe8\x3a\xcc\xb6\x11\xe5\xe7\x1a\xdf\x6d\xdf\xa7\x19\xb0\x3f\xe5\x75\x4a\x35\xf2\x89\x27\x4a\x86\x53\xec\x21\x64\xef\x97\x3b\xd1\xec\x29\xf5\x4d\x0b\x18\xf9\x8b\x4a\x8e\x87\x19\xdf\xdc\x34\x00\x4a\x49\xb2\x3a\x3a\xce\x5d\x86\xd4\x00\xec\x48\x57\x07\xcb\x48\x56\xbf\x9e\xd3\xfe\xe7\x27\x9a\xdb\x5c\xa7\xe6\x24\xac\x79\x9c\x30\xa6\xfa\x4c\xfb\xe1\x5d\x28\x50\x7b\xa2\x73\x61\x8c\x35\x7d\x26\x3d\x50\xf4\xf2\x6b\xa2\x60\x7b\x6d\xa5\xe8\xd9\x61\x22\x5b\x90\x3f\xd3\x9c\x24\xb0\x89\x72\x18\x3b\x27\x4a\x92\x3a\x27\xd3\x79\x91\x03\xf0\x21\xfa\xff\xb8\xbf\xe2\x74\x94\x9d\xad\xcc\xe5\xce\xee\xd6\x1c\xd0\xf3\x33\xcd\x6b\xe7\x38\x2c\xd6\x3c\x2a\x77\x2c\xe7\xc2\xb7\x6f\x6e\x4f\x55\x8a\x61\xbe\x8d\xf3\xeb\xfe\xe8\x9c\xe4\x60\xaf\x5d\x4b\x91\xf9\xbb\xab\x9f\x38\x0c\x1c\xc6\xeb\xd7\xfc\xb5\x5b\xcc\xab\x1f\xe4\xac\x2e\xf1\x22\xdd\xf2\xde\x8b\xa7\x47\x5a\x17\xcd\x17\x67\x74\xe1\x6e\x8f\x83\xfc\x07\x68\xf3\x3b\x00\x00\xff\xff\x6f\x24\x8d\x56\x06\x05\x00\x00"),
		},
		"/orchestrations/kappnav": &vfsgen۰DirInfo{
			name:    "kappnav",
			modTime: time.Date(2019, 9, 15, 14, 51, 26, 214194528, time.UTC),
		},
		"/orchestrations/kappnav/0.1": &vfsgen۰DirInfo{
			name:    "0.1",
			modTime: time.Date(2019, 9, 18, 15, 57, 36, 545852846, time.UTC),
		},
		"/orchestrations/kappnav/0.1/kappnav-0.1.0.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kappnav-0.1.0.yaml",
			modTime:          time.Date(2019, 9, 15, 14, 51, 26, 214385301, time.UTC),
			uncompressedSize: 1712,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xc1\x6e\xdb\x38\x10\xbd\xeb\x2b\x06\xd9\x43\x80\x05\xa4\xc4\xb7\x05\x6f\xda\x24\xbb\x05\x92\x3a\x86\x92\xb6\xc7\x62\x44\x4f\x2c\x36\x14\x49\x90\x43\xa5\x69\xd1\x7f\x2f\x24\x4b\x96\x1c\xcb\x49\x2e\xd5\x4d\xc3\xe1\x7b\x33\xef\x3d\xa2\x53\x9f\xc9\x07\x65\x8d\x00\x74\x8a\xbe\x33\x99\xf6\x2f\x64\x8f\xff\x84\x4c\xd9\xb3\x66\x51\x12\xe3\x22\x79\x54\x66\x2d\xe0\x22\x06\xb6\x75\x41\xc1\x46\x2f\xe9\x92\x1e\x94\x51\xac\xac\x49\x6a\x62\x5c\x23\xa3\x48\x00\x0c\xd6\x24\xe0\x11\x9d\x33\xd8\x84\x4c\x56\xe8\x39\x64\x15\xe9\xba\x07\x4d\x82\x23\xd9\x76\x6e\xbc\x8d\x4e\xc0\x4c\xc7\x16\x25\xb4\x4d\x00\x5b\xee\xeb\xdc\xb9\x25\x36\x5d\x45\xab\xc0\xd7\xd3\xea\x8d\x0a\xdc\x9d\x38\x1d\x3d\xea\x91\xbe\x2b\x06\x65\x36\x51\xa3\xdf\x95\x13\x80\x20\xad\x23\x01\xcb\x96\xc6\xa1\xa4\x75\x5b\x8b\xa5\xef\x77\xeb\xa9\x03\x23\xc7\x20\xe0\xe7\xaf\x04\xa0\x19\x94\x6a\x16\xa8\x5d\x85\x8b\xb1\xd6\xb5\xa7\xfd\xea\x93\x63\x80\x40\xbe\xa1\xb5\x00\xf6\x91\x7a\x48\xeb\x71\x43\x7d\x25\x4d\xd3\x64\x6a\x42\x33\x48\x7d\x47\xbe\x51\x92\x72\x29\x6d\x34\x3c\x23\x70\x2b\x57\x6a\x1d\x79\x64\xeb\x0f\x70\x7c\x89\x32\xc3\xc8\x95\xf5\xea\x07\xb6\x1e\x8d\x8e\x0e\x66\xea\x18\x98\x7c\x61\x35\xbd\x09\xef\xa3\x6e\x25\x49\xdb\x90\xfc\xdf\xba\xd6\x2f\x7c\xfa\xf7\x69\x02\xb0\x27\xda\x50\x6c\xc8\x97\x93\x42\x0a\xc6\x9a\x21\x39\x9f\x8a\x9b\x57\x7b\xd3\xf4\x70\xc6\x7f\x95\x59\x2b\xb3\x79\xff\x96\x6f\xed\x14\x62\xf9\x8d\x24\x77\x6b\xcd\x6a\x3e\x7f\xad\x8f\x66\x9b\x99\x31\x4f\xde\x6a\x2a\xe8\xa1\xa5\x3a\x14\xf7\x18\xce\xa0\xe5\x2b\x7b\x1c\xf8\x8a\xce\x85\xd1\xc2\x4b\x72\xda\x3e\xd7\xf4\x8e\x80\x0c\x6f\xce\x93\xd3\x4a\x62\x10\xd0\xe6\x33\x90\x26\xc9\xd6\x6f\xd3\x5e\x23\xcb\xea\x06\x4b\xd2\x7d\xfc\x8f\x4d\xce\x54\x3b\x8d\x4c\xfd\xb5\x09\x75\xf7\x3a\xf7\x10\x8e\x61\x00\x0c\x23\x0d\xcf\x64\x94\x7e\x79\xe4\x06\x80\xb4\x86\x51\x19\xf2\x13\xfc\xf4\x28\xc3\xf6\xfb\x0b\x0a\x72\x1a\x25\x01\x57\x2a\xc0\x93\xe2\x0a\xb8\x22\x28\xa3\xd2\x0c\xaa\xc6\x0d\x75\x08\x93\x2b\x5d\x71\x67\xef\xd9\x00\x2a\xce\xb3\x45\x76\xfe\xb2\x6f\x15\xb5\x5e\x59\xad\xe4\xb3\x80\x5c\x3f\xe1\x73\x98\x74\x90\x69\xc4\xe4\x77\x9c\xf6\x4b\x7e\x7f\xf1\xe1\xeb\x32\xff\x78\x75\xb7\xca\x2f\xae\xf6\x7a\x00\x1a\xd4\x91\xfe\xf3\xb6\x16\x2f\x0e\x00\x1e\x14\xe9\x75\x1f\xb6\xd9\xb3\x15\x72\x25\x76\xae\x64\xbb\xb8\xce\x8e\xb1\xba\xbd\xec\x86\xf8\xb3\xfc\xb3\xd4\xb7\xab\xab\x22\xbf\xbf\x2d\x8e\xf2\x0b\x38\xd9\xf3\xf4\x24\xf9\x1d\x00\x00\xff\xff\xb6\xcf\x8f\x3d\xb0\x06\x00\x00"),
		},
		"/orchestrations/kappnav/0.1/kappnav-cr-0.1.0.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kappnav-cr-0.1.0.yaml",
			modTime:          time.Date(2019, 9, 18, 15, 57, 36, 546028954, time.UTC),
			uncompressedSize: 3121,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x96\x4f\x6b\x1b\x49\x10\xc5\xef\xfa\x14\x0f\xef\x65\x17\xac\x7f\xfe\xc7\x6e\xb3\x2c\x08\xdb\x0b\x62\x6d\xaf\x89\xe2\x5c\x42\x08\xa5\x9e\x92\xa6\xa2\x9e\xee\x4e\x77\xcf\x28\xfa\xf6\x61\x66\x24\xc5\x49\xac\x43\x20\x63\x30\x44\xc7\xd7\x5d\xf3\xaa\xea\xa7\x9a\x29\xf2\xf2\x86\x43\x14\x67\x15\x74\x4e\x21\xc5\x41\xce\xa6\x18\xac\xfe\x8c\x03\x71\xc3\x6a\x4c\xc6\xe7\x34\xee\xad\xc4\x66\x0a\xff\x4d\xbc\xbf\xa3\xaa\x57\x70\xa2\x8c\x12\xa9\x1e\x60\xa9\x60\x05\xb1\x31\x91\xd5\xdc\x8b\x9e\x75\x2d\xff\x86\x2b\x5e\x50\x69\x12\x2a\x32\x25\x47\x68\xe7\x85\x33\x2c\x82\x2b\xf0\xb7\x0f\xee\x03\xeb\xf4\x3e\x93\xf0\xcf\xb0\x36\xec\xb7\xe6\xc3\x15\x79\x6f\xa9\x1a\xb6\x41\x83\x0d\x15\xa6\x57\x3f\xed\xe7\xfe\x9a\x27\xe2\xd2\x15\x85\xb3\x90\x82\x96\x8c\x8a\x82\xd0\xdc\x70\xec\xc0\xad\xb3\x0a\x56\x2d\x0f\xbc\xba\x9e\xbd\xc6\xe4\x7e\xda\x6d\x15\x00\x35\x76\x13\x2f\x35\x61\x20\xb0\x77\x51\x92\x0b\x1b\x85\x1d\x38\xf2\x12\x9b\xc3\x44\x4b\x85\xd1\x60\x3c\x18\x6d\xef\x46\x57\x06\xcd\xb1\x0d\x05\xb4\xb3\x31\x05\x12\x9b\xf6\x12\xc0\xb6\xce\x3e\x53\x58\x90\x89\xbc\x95\x03\x7f\x2c\x39\x3e\xbe\xa6\x7d\xa9\x70\x3e\x1a\x15\x7b\xa5\xe0\xa2\x49\xe3\x7c\x7c\x72\x2b\x5b\xd5\x48\x21\x3f\x12\xd5\x35\xa5\x4b\x67\x53\x70\xc6\x70\x78\x1e\x4e\x5f\xfc\x0e\xe3\xd2\xfb\x3b\xbf\xa0\xed\x1a\xf8\x15\xb4\x87\x67\x1a\xaa\x87\xe9\x61\x48\xa5\x3c\x05\x27\x72\xa8\x44\xf3\xae\x55\x69\xe3\x59\xe1\xd2\x94\x31\x71\x98\xde\xbf\x18\x7e\x5d\x03\x9c\x5a\x49\xcd\xe8\x91\xd8\xe7\x9a\xbc\xda\xf3\x30\x4e\xb1\x92\x5e\xee\xb4\x35\x9f\xcb\x36\xc2\x97\xc6\xdc\x3b\x23\x7a\xa3\x30\x31\x6b\xda\xc4\xbd\x3c\x63\x1d\x38\x45\x85\xb7\xef\x3a\x23\x7c\x6d\x2b\x09\xce\x16\x6c\x13\x99\x4e\xc1\xd6\x5d\xaf\xda\x9a\x57\xe5\x9c\xaf\x6d\xa5\xe0\x56\x59\x67\x95\x4d\x82\xce\x25\xb1\x4e\x65\xe0\x6e\x3c\x30\xf3\xac\x65\xb1\x01\x3d\xb2\xc2\xef\x54\x64\x17\x67\xc7\xf0\x5e\x5f\x9c\x19\x3e\x46\x3c\xfd\x6b\xf4\xe9\x0f\x90\xcd\xb0\x66\x59\xe6\x09\xc9\x61\xde\xe4\x84\x32\xd6\xeb\x9c\x0b\x88\x3a\xe7\xac\x34\x62\x97\xa0\x88\x85\x33\xc6\xad\x23\xda\x25\x10\x18\xa1\x8f\x2b\x07\xeb\x52\x1d\xb1\x15\xc7\xe8\xe3\x86\x29\x26\xf8\xc0\x0b\x0e\x81\xb3\xed\xc9\x09\xfa\xb8\x73\x5b\x99\xeb\x8d\xb2\xd5\x4f\xd1\xc7\xad\xfb\x26\xa0\x4e\xbe\xc5\xd2\x24\xae\x70\xf4\x5d\xf8\x51\xfb\x97\x6c\x0b\x3a\x7c\xa1\x29\xf4\xe9\xe3\xae\x20\xff\xef\xd9\xce\x72\x59\x24\xac\x79\xde\xcc\xba\x33\xdd\xee\xa1\xd8\xb9\xb4\x3d\x73\xab\xec\x5f\xa6\x1a\x7c\x36\xf1\x5e\x21\x93\xd8\xbc\x5a\x76\x87\x13\xef\x6f\xa8\xb4\x3a\xe7\xa0\x76\xaf\x9d\xde\xe7\x00\x00\x00\xff\xff\x67\xd8\x92\x20\x31\x0c\x00\x00"),
		},
		"/orchestrations/landing": &vfsgen۰DirInfo{
			name:    "landing",
			modTime: time.Date(2019, 9, 15, 14, 51, 26, 214500223, time.UTC),
		},
		"/orchestrations/landing/0.1": &vfsgen۰DirInfo{
			name:    "0.1",
			modTime: time.Date(2019, 9, 17, 22, 1, 0, 835295057, time.UTC),
		},
		"/orchestrations/landing/0.1/kabanero-landing.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kabanero-landing.yaml",
			modTime:          time.Date(2019, 9, 15, 14, 51, 26, 214664805, time.UTC),
			uncompressedSize: 423,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4b\x4e\xc4\x30\x0c\x86\xf7\x39\x85\x2f\x90\x41\x88\xd9\x90\x1d\xe2\x02\x23\x40\xec\x4d\x6a\xda\x68\x5a\xdb\xb2\xdd\x39\x3f\x4a\x2b\x21\x9e\x12\xec\x92\xff\x21\x7d\xbf\x51\xdb\x33\x99\x37\xe1\x02\x97\xeb\x74\x6e\x3c\x14\x78\x24\xbb\xb4\x4a\x69\xa1\xc0\x01\x03\x4b\x02\x60\x5c\xa8\xc0\x19\x5f\x90\xc9\x24\xcf\xc8\x43\xe3\x31\xb9\x52\xed\xb6\xd3\x4c\x35\xc4\xfa\x1b\x00\x55\x7f\xc8\x02\xa8\x58\x78\x8f\x64\x50\x93\x90\x2a\x73\x81\xa7\xfb\xd3\x56\xea\x66\x81\xe3\xf1\x66\xfb\x05\xda\x48\x71\xda\xb4\xdb\x2e\xe6\x9c\xd3\x47\x5a\x93\x35\xe8\x20\x4a\xec\x53\x7b\x8d\x43\x93\xab\xf7\x01\x0f\xdd\xfb\x0f\x7e\xc8\x0e\xfe\x79\x7f\x57\x7e\x29\x02\xc4\xec\x7b\x27\xc8\x96\xc6\x18\x1b\x95\xa2\x7b\x4c\x26\xeb\x38\x7d\x23\xfe\x7a\xdf\xbb\x5a\x65\xe5\xf8\x0b\xe7\x5b\x00\x00\x00\xff\xff\x95\x3c\xf2\x88\xa7\x01\x00\x00"),
		},
		"/samples": &vfsgen۰DirInfo{
			name:    "samples",
			modTime: time.Date(2019, 9, 19, 21, 22, 40, 905226493, time.UTC),
		},
		"/samples/collection.yaml": &vfsgen۰FileInfo{
			name:    "collection.yaml",
			modTime: time.Date(2019, 8, 22, 17, 2, 16, 806621171, time.UTC),
			content: []byte("\x61\x70\x69\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x6b\x61\x62\x61\x6e\x65\x72\x6f\x2e\x69\x6f\x2f\x76\x31\x61\x6c\x70\x68\x61\x31\x0a\x6b\x69\x6e\x64\x3a\x20\x43\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e\x0a\x6d\x65\x74\x61\x64\x61\x74\x61\x3a\x0a\x20\x20\x6e\x61\x6d\x65\x3a\x20\x6a\x61\x76\x61\x2d\x6d\x69\x63\x72\x6f\x70\x72\x6f\x66\x69\x6c\x65\x0a\x73\x70\x65\x63\x3a\x0a\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3a\x20\x30\x2e\x30\x2e\x32"),
		},
		"/samples/default.yaml": &vfsgen۰CompressedFileInfo{
			name:             "default.yaml",
			modTime:          time.Date(2019, 9, 15, 14, 51, 26, 214901958, time.UTC),
			uncompressedSize: 235,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x41\x6e\x03\x31\x08\x85\xe1\xbd\x4f\xc1\x05\x62\x3a\x5d\xfa\x0a\xdd\x77\x4f\x6c\xd4\x41\xc1\x60\xd9\x24\x6d\x6f\x5f\xa9\xca\x28\xb3\xfd\xd1\xc7\xa3\x21\x9f\x3c\x97\xb8\x15\xb8\xd1\x95\x8c\xa7\x67\x71\x7c\x6c\xa4\x63\xa7\x2d\xdd\xc4\x5a\x81\x8f\xe7\x29\x75\x0e\x6a\x14\x54\x12\x80\x51\xe7\x97\x4a\x6b\x70\x2d\x29\x01\x54\x57\xe5\x1a\xe2\xb6\x0a\x24\x00\x80\xc9\xc3\x97\x84\x4f\xe1\x23\x5d\x9e\xbc\xb2\xc5\x24\xfd\x6f\x00\xf7\xa9\x05\xf6\x88\xb1\x0a\xe2\x97\xc4\x7e\xbf\xe6\xea\x1d\x8f\x91\x8b\x38\x9e\xde\xe3\x64\x65\x5a\xbc\xb0\xf9\xb7\xa9\x53\xc3\xc7\x5b\xde\xf2\xfb\x09\x58\xe3\x9f\xfc\x4b\x5d\xff\x02\x00\x00\xff\xff\xea\xc4\xe5\xca\xeb\x00\x00\x00"),
		},
		"/samples/full.yaml": &vfsgen۰CompressedFileInfo{
			name:             "full.yaml",
			modTime:          time.Date(2019, 9, 19, 21, 22, 40, 790008662, time.UTC),
			uncompressedSize: 2177,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x93\xdb\x36\x0c\xbd\xeb\x57\x60\xb2\x97\x66\xa6\x96\xb3\x3d\xea\xb6\x4d\x32\x69\xa6\xe9\xc7\xb4\x9b\xde\x21\x12\xb6\x30\x4b\x12\x1a\x02\xb2\xe3\xfe\xfa\x0e\x29\xd9\x96\x77\x93\x5e\x7a\xe8\x51\x02\xf1\xf0\xf0\xf8\x00\xde\xc1\xe3\xc0\x0a\xf4\x05\xe3\x18\x08\x3c\x45\x49\x6a\x19\x8d\x14\x30\x04\x90\x1d\xd8\x40\x30\x8a\x2a\xf7\x81\xc0\x49\xda\xf1\x7e\xca\x68\x2c\x09\x28\x50\xa4\x64\xda\xdc\x35\x77\xf0\xab\x18\x81\x0d\x68\xa0\x12\xe9\x9c\x89\x66\x99\xfb\xa9\xe0\x45\x3c\x41\x12\x83\x88\x4f\x04\x4a\x49\x09\x38\x81\x93\xd8\x73\x9a\xf1\x8e\x6c\x03\x88\x0d\x94\x57\x79\xcd\x1d\x60\xf2\x33\xb2\x15\xb2\x3a\x73\x8d\xbc\x1f\xac\x02\xf6\x04\x79\x4a\x58\xf8\xa1\x6e\x58\x1b\x1c\xf9\x2f\xca\xca\x92\x3a\x78\xc2\x1e\x13\x65\x69\x59\xb6\x87\x7b\x0c\xe3\x80\xf7\xcd\x13\x27\xdf\xc1\xcf\x4b\xa8\x89\x64\xe8\xd1\xb0\x6b\x00\x12\x46\xba\x66\x35\x3a\x92\x2b\xbf\x8b\x50\x04\x63\x40\xdb\x49\x8e\x70\x98\xe1\xc1\x93\x51\x8e\x9c\x48\x6b\xb7\x9e\x94\x33\xf9\x4b\x78\x27\xb9\xca\xe8\x24\x8e\x92\x8a\x54\xdf\x43\x3f\x95\x3e\x44\xa9\xa2\x3a\x4c\x85\xbf\x1c\x28\x67\xf6\x94\x80\x93\xe7\x03\xfb\x09\x43\x38\x01\x2a\x1c\x29\x84\x06\xce\x88\x1d\xbc\x7a\xd3\xde\xb7\x3f\xbc\x6a\x1a\x00\x1c\x47\x15\x7f\xda\xc8\x48\x19\x4d\x72\xe1\x59\x30\x7f\x5b\xc0\x66\x4e\x17\xce\x47\xf6\x45\x77\x33\x4e\x7b\xad\xd4\xce\x34\x25\xcd\xca\x5e\x68\x56\xa0\xdb\x92\xf7\xb5\xe4\x4b\x78\x8e\xb8\x2f\xba\x03\x82\xd2\x88\xc5\x3a\x90\x69\x14\x65\x93\x7c\x02\xc9\x60\xb8\xaf\x99\xd7\xbf\xdd\x99\xfa\xf6\x79\x0b\xf5\xa0\xe1\x7e\x29\xfa\xe6\x5f\x8b\x4e\x99\x6b\xb4\x7e\x7d\x1b\xb3\xab\x48\x05\xe8\x09\xc7\x31\xe1\x61\xd6\x89\xaa\x63\x3a\xb0\x3c\x51\x09\xba\xc0\x7f\x52\x3e\xb0\x23\xfd\xba\x90\x8b\x74\xff\xb3\x72\x67\x67\x6e\x58\xb6\x2e\xf0\x46\x17\xce\xff\x45\xb9\x6f\x61\x5e\x95\x0b\x98\x3c\xa7\xfd\x59\x98\xc7\x1f\xdf\x35\x55\x33\x09\x81\x5c\x99\x5d\xed\x60\x89\x3d\x40\x60\xb5\x79\xfe\x45\x57\x2d\x31\x29\x1c\x07\x76\x03\x60\x2e\x6a\x62\x76\x03\xf9\x2a\xe7\x0a\xe7\xb6\x61\xa6\x33\xf0\x66\x99\x4c\x4e\x6e\xea\x2f\x56\x01\x98\x72\xe8\x60\x30\x1b\xb5\xdb\x6e\xf7\x6c\xc3\xd4\xb7\x4e\xe2\xf6\xa6\xa7\x2b\xfc\x36\x53\x20\x54\xd2\xad\x97\x63\x0a\x82\x7e\x7b\xa8\x13\xb5\x4a\x48\x9e\xbe\xb4\x27\x8c\x61\x29\x71\x07\x0f\xce\xf8\x30\x2f\x45\xf0\xb4\xc3\x29\x58\xb1\x43\x69\xf2\x39\x75\x00\x5c\x0e\xbf\x9b\x0f\xbe\x5d\x6b\x54\xcd\x76\xde\x26\x9c\xca\x5c\xce\xab\x8f\x53\xbd\x9e\x0f\xb5\x01\xd0\x39\x01\x58\x61\x52\xf2\xd0\x9f\x6a\xf4\xbc\xb0\xe0\xed\xa7\x8f\x60\x52\x81\x46\xca\x75\xba\x27\xa5\x0c\x26\x90\xa5\xec\x46\x1c\xc7\x62\xd5\xe3\x40\x09\xd0\x39\x52\x2d\x9f\x05\xe3\xca\xb7\x6d\x00\x66\xc1\x2e\xd7\x3a\x10\x3c\xfc\xfe\x11\x3e\xff\xf1\x09\x32\xed\x28\x6b\x41\x5c\xf1\xe2\xa4\x86\xc9\x11\x7c\x27\x19\x3e\xfc\xf4\xfe\xf2\xe3\x75\xdd\xcf\x0b\x8c\x93\x64\xc8\x69\x36\x9c\xe4\x3d\x26\xfe\x7b\x59\xf0\x03\x65\x7a\x46\x03\x8e\xa8\xe0\x82\x24\xf2\x2d\x14\x0a\x0b\x4a\xe9\xf1\xc8\x21\x94\xce\xe6\x21\x2b\xb4\x4c\x80\x93\x51\x46\x67\xf3\x73\xb1\x30\x5b\x08\xbd\x6e\x6b\x36\x8e\xfc\x79\xed\x0b\x1c\xb9\xbd\x7a\x63\xd5\xed\x92\x7d\x43\xf2\x86\xfe\x6a\x20\x2f\xe4\x2f\x6d\x7e\xad\x85\x1a\x5c\xe3\xdd\x8c\xd7\xaa\xf4\x65\x4a\x08\xe3\x79\x30\x74\x90\x29\x78\x18\xf0\x40\x80\x3e\x72\x02\x9c\x6c\x90\xcc\x76\x5a\x6e\xe2\x45\xed\x16\xe0\x3d\xba\xa1\xc2\x40\x9c\xb4\x3e\x87\x9e\x76\x9c\xc8\xdf\xba\x6a\x49\x5d\x73\x6b\x01\x7e\xa1\xd8\x97\x8b\x5e\xde\xeb\x85\x4d\xd1\xbd\x27\xa8\x6f\xaa\x09\x04\xd9\x17\xa8\x35\x83\x1b\x2f\x96\x07\xba\xf2\x65\xb5\x62\xc3\x17\x3e\x83\x19\xb8\x5b\x46\xb9\x9e\x7d\x24\x8c\xcd\x3f\x01\x00\x00\xff\xff\xf6\xed\x62\xa8\x81\x08\x00\x00"),
		},
		"/samples/override_software_versions.yaml": &vfsgen۰CompressedFileInfo{
			name:             "override_software_versions.yaml",
			modTime:          time.Date(2019, 9, 15, 14, 51, 26, 215693956, time.UTC),
			uncompressedSize: 1243,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x93\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x13\x5d\x9b\x40\xe8\x96\xad\x73\x07\x96\xaa\x9d\x2f\xf8\x44\x4e\x38\x67\xcb\x39\x82\xf2\xef\xab\x38\x09\x30\x94\x42\x25\x2a\x75\x8a\xe4\x3c\xbf\xbb\xef\xe9\x19\x03\x7f\x50\x6c\xd9\x4b\x09\x7b\xac\x50\x28\xfa\x9c\xfd\xb2\x2b\xd0\x85\x1a\x0b\xb3\x67\xb1\x25\xbc\x4d\xbf\x4c\x43\x8a\x16\x15\x4b\x03\x20\xd8\xd0\xf9\x56\x61\xda\x40\xdb\xe1\xbc\x9b\x0d\x57\x79\x91\xaf\x0c\x80\x01\xc0\x10\x5a\x6f\xfb\x4d\xa0\x88\xea\xe3\x20\x03\x78\x82\x4d\x47\x31\xb2\xa5\x16\xb4\x26\x60\x51\x8a\x82\xce\xf5\x60\x49\x29\x36\x2c\x64\xe1\x75\xbc\x3a\xdb\xc2\x91\xb5\x4e\xf2\x10\x7d\xc7\x96\x2c\x74\xe8\x0e\x94\x1c\x4f\xa3\x17\x69\xf6\xc2\x64\x59\x66\xfe\x82\xf1\x01\x3c\xdc\xe0\x8e\x7e\xa4\x49\x8a\x72\x9e\xb5\x9c\xbe\x99\x9f\x87\x8e\xf9\x3e\x16\x71\x7d\x3f\xa2\x17\xd7\xa7\xd5\x23\x05\xdf\xb2\xfa\xd8\xc3\xa1\x25\x0b\xd5\x78\x3c\x19\xc0\xbc\x6f\x3e\x39\xbc\xd7\x04\x8a\x3b\x38\xb2\x73\x50\x5d\x89\x29\x69\xcf\xc6\xd7\x53\xf8\x07\xfc\x03\x4c\x02\x67\xf9\x16\x1c\x2c\x05\xe7\xfb\x86\x44\x2f\x22\xb8\x48\xed\x76\x12\x8a\xbb\xa9\xd4\xeb\x47\x97\xfa\xe5\x16\xf1\x67\x4d\x02\x95\xd7\x7a\xaa\x2c\x8a\xbd\x5c\xde\x9f\x02\xc1\x38\xd4\x98\x5a\x12\x7d\x1e\x1f\xc0\xa8\x57\x8d\x5c\x1d\x94\x26\xbf\x44\xab\xb8\x4f\xe2\x2d\x59\x92\xed\x6f\xfa\x7e\x6f\x31\xbe\x02\x00\x00\xff\xff\x69\x23\x65\x0a\xdb\x04\x00\x00"),
		},
		"/samples/simple.yaml": &vfsgen۰FileInfo{
			name:    "simple.yaml",
			modTime: time.Date(2019, 6, 26, 20, 20, 34, 484370429, time.UTC),
			content: []byte("\x61\x70\x69\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x6b\x61\x62\x61\x6e\x65\x72\x6f\x2e\x69\x6f\x2f\x76\x31\x61\x6c\x70\x68\x61\x31\x0a\x6b\x69\x6e\x64\x3a\x20\x4b\x61\x62\x61\x6e\x65\x72\x6f\x0a\x6d\x65\x74\x61\x64\x61\x74\x61\x3a\x0a\x20\x20\x6e\x61\x6d\x65\x3a\x20\x6b\x61\x62\x61\x6e\x65\x72\x6f\x0a\x73\x70\x65\x63\x3a\x20\x7b\x7d\x0a"),
		},
		"/versions.yaml": &vfsgen۰CompressedFileInfo{
			name:             "versions.yaml",
			modTime:          time.Date(2019, 9, 18, 15, 57, 36, 11715836, time.UTC),
			uncompressedSize: 1683,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xcd\x8e\xdb\x3a\x0c\x85\xf7\x7e\x0a\xc2\xd9\x8e\xf3\x33\x77\xe7\x57\xb8\x68\xbb\x19\xa0\x6b\x45\xa2\x63\xa2\xb2\xa8\x8a\x72\x82\xbc\x7d\x21\xd9\x72\xe2\x34\x05\xa6\x53\xa0\xdd\x09\xa4\x78\xf8\x1d\x92\x1b\xf8\xa4\xbc\xc0\xff\xea\xa8\x1c\x06\x06\x6f\x55\xec\x38\x0c\x70\xc6\x20\xc4\x0e\x22\x43\x40\xab\x22\x1a\xd0\x3c\x78\x76\xe8\x62\x49\x4a\xb5\x81\xd1\x19\x0c\x12\x99\x0d\x1c\xaf\x10\x7b\x04\x8e\x3d\x06\x60\x8f\x41\x45\x0e\xb2\x85\xaa\xda\xc0\x67\x8e\x98\xb3\x1d\x5b\xcb\x17\x72\x27\x10\xfc\x3e\xa2\xd3\xd8\xe6\xf8\x42\x50\x0a\xe1\x88\x9a\x07\x14\x50\x17\x15\xb0\xda\x00\x77\xa0\xc0\xe1\x65\x41\xe3\x6e\x5d\x59\xd8\x5f\x80\x1c\x78\x15\x62\x22\x42\x43\x31\x75\x8b\x3d\x09\x74\x64\x93\xd2\x17\xa7\x27\x98\x05\x12\x54\x40\x08\x6c\x2d\x1a\xe0\x31\xbe\xe4\xac\x32\x03\x39\x92\x38\xe1\x68\xe5\x40\xf7\xcc\x82\x69\x26\xa3\x24\xa1\xf4\x2b\x11\x2d\x08\x05\x6d\xd5\xf8\x0e\x31\xa0\xf0\x18\x34\x6e\xe1\x2d\xf1\x68\x35\x0a\xa6\x29\x4e\x33\x2b\x59\x49\x1d\x8e\x08\xa3\x37\x79\xf0\xa3\x2c\x0e\x06\xe5\x3d\xb9\x53\x1a\xe9\xd7\x1e\xdd\x5a\x9d\x9c\x44\x95\xbc\x19\x46\x01\xc7\x11\xc4\xa3\xa6\xee\x0a\x97\x9e\x74\x7f\x3f\xb8\xa5\x66\xf2\xf2\x92\xcd\x90\x00\x49\x96\x3c\x2b\x3b\x62\x65\xb0\x53\xa3\x8d\x2d\xd4\xfb\xed\x61\xfb\x5a\xa7\xae\x6f\xec\xc1\xe2\x19\x6d\x3b\xdf\x85\xfc\xe4\x3e\xe3\x0b\x77\x31\x2d\xee\x76\x2b\xdf\xe6\x6f\x6d\xd5\x94\xe0\xac\x7c\xa8\x2b\x28\x57\xd6\x94\xff\x2d\x54\x00\x00\xca\x7b\x61\x73\x6d\xca\xaa\xe6\x92\x7d\x9d\xb3\xda\x52\x23\x18\xce\xa4\x51\xd6\x19\xab\x9c\x21\x77\xba\x05\x1f\x9b\xbe\xfe\x8b\xa6\xff\xfd\x8d\xa6\x55\x69\x50\x76\xd0\x56\x4f\xd4\x2b\x80\x47\xba\x59\x90\x83\xee\x31\x9f\xfd\x44\x57\xaf\x03\xbb\x47\xa9\xdd\x7e\xda\x20\x00\x19\x74\x91\x3a\xc2\x20\x6d\x0e\x24\xb3\x9e\x85\x22\x87\x6b\x0b\xf5\x5c\x99\x14\x2c\xe9\x2c\xb7\xa8\xd4\x73\x41\x54\xf7\x56\x6e\xf6\x3e\xce\x3b\x2b\xbc\x1f\xb3\x5c\x6a\xa9\xfc\x15\xda\x7a\x27\x4f\x00\x0f\xef\x03\xbc\xd7\xf9\x7d\xca\x86\x78\xb7\xbc\xb5\xa5\xa7\xb4\x1f\x1e\xde\x9f\xb1\xdd\x81\xf1\x30\x28\x67\x1a\x4b\x0e\x17\xc1\xa7\xa8\x3f\x02\x00\x00\xff\xff\x7f\x8b\xc4\x25\x93\x06\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations"].(os.FileInfo),
		fs["/samples"].(os.FileInfo),
		fs["/versions.yaml"].(os.FileInfo),
	}
	fs["/orchestrations"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/appsody-operator"].(os.FileInfo),
		fs["/orchestrations/cli-services"].(os.FileInfo),
		fs["/orchestrations/kappnav"].(os.FileInfo),
		fs["/orchestrations/landing"].(os.FileInfo),
	}
	fs["/orchestrations/appsody-operator"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/appsody-operator/0.1"].(os.FileInfo),
	}
	fs["/orchestrations/appsody-operator/0.1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/appsody-operator/0.1/appsody.yaml"].(os.FileInfo),
	}
	fs["/orchestrations/cli-services"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/cli-services/0.1"].(os.FileInfo),
	}
	fs["/orchestrations/cli-services/0.1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/cli-services/0.1/kabanero-cli.yaml"].(os.FileInfo),
	}
	fs["/orchestrations/kappnav"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/kappnav/0.1"].(os.FileInfo),
	}
	fs["/orchestrations/kappnav/0.1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/kappnav/0.1/kappnav-0.1.0.yaml"].(os.FileInfo),
		fs["/orchestrations/kappnav/0.1/kappnav-cr-0.1.0.yaml"].(os.FileInfo),
	}
	fs["/orchestrations/landing"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/landing/0.1"].(os.FileInfo),
	}
	fs["/orchestrations/landing/0.1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/landing/0.1/kabanero-landing.yaml"].(os.FileInfo),
	}
	fs["/samples"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/samples/collection.yaml"].(os.FileInfo),
		fs["/samples/default.yaml"].(os.FileInfo),
		fs["/samples/full.yaml"].(os.FileInfo),
		fs["/samples/override_software_versions.yaml"].(os.FileInfo),
		fs["/samples/simple.yaml"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
