apiVersion: v1
kind: Namespace
metadata:
  name: kabanero
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kabanero-operator
  namespace: kabanero
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kabanero-operator
  template:
    metadata:
      labels:
        name: kabanero-operator
    spec:
      serviceAccountName: kabanero-operator
      containers:
        - name: kabanero-operator
          # Replace this with the built image name
          image: kabanero/kabanero-operator:latest
          command:
          - kabanero-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "kabanero-operator"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kabanero-operator
  namespace: kabanero
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - get
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - kabanero-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - kabanero.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - tekton.dev
  resources:
  - installs
  verbs:
  - get
  - create
  - delete
- apiGroups:
  - eventing.knative.dev
  resources:
  - knativeeventings
  verbs:
  - get
  - create
- apiGroups:
  - serving.knative.dev
  resources:
  - knativeservings
  verbs:
  - get
  - create
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kabanero-operator
  namespace: kabanero
subjects:
- kind: ServiceAccount
  name: kabanero-operator
  namespace: kabanero
roleRef:
  kind: ClusterRole
  name: kabanero-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kabanero-operator
  namespace: kabanero
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: collections.kabanero.io
spec:
  group: kabanero.io
  names:
    kind: Collection
    listKind: CollectionList
    plural: collections
    singular: collection
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            name:
              type: string
            repositoryUrl:
              type: string
            version:
              type: string
          type: object
        status:
          properties:
            activeDigest:
              type: string
            activeVersion:
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kabaneros.kabanero.io
spec:
  group: kabanero.io
  names:
    kind: Kabanero
    listKind: KabaneroList
    plural: kabaneros
    singular: kabanero
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            collections:
              properties:
                enableFeatured:
                  type: boolean
                repositories:
                  items:
                    properties:
                      name:
                        type: string
                      url:
                        type: string
                    type: object
                  type: array
              type: object
            tekton:
              properties:
                disabled:
                  type: boolean
                version:
                  type: string
              type: object
            version:
              type: string
          type: object
        status:
          properties:
            tekton:
              properties:
                status:
                  type: string
              type: object
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
---
---
---
---
---
